#TestCase 1
#Written by: Don Valino
#inputs: speed = 20 , speed limit = 30
#Expected output: EURO 0
#Output = EURO 0

result=$(java trafficfine 20 30)
echo $result
if [ "$result" = "EUR 0" ]; then
	echo "Passed"
else
	echo "Failed"
fi




#TestCase 2
#Written by: Graham Timmins
#inputs: speed = 101 , speed limit = 30
#Expected output: SUSPEND
#Output = 100
#Issue Identified: When we passed in the speed to be 101km/h and the speed limit to be 30km/h,
#the expected output should have been "SUSPEND". Instead, the output produced a fine of EUR 100.

result2=$(java trafficfine 101 30)
echo $result2
if [ "$result2" = "SUSPEND" ]; then
	echo "Passed"
else
	echo "Failed"
fi



#TestCase 3
#Written by: Don Valino
#inputs: speed = 48 , speed limit = 50
#Expected output: EUR 0
#Output = EUR 0

result3=$(java trafficfine 48 50)
echo $result3
if [ "$result3" = "EUR 0" ]; then
	echo "Passed"
else
	echo "Failed"
fi



#TestCase 4
#Written by: Gareth Quirke
#inputs: speed = 50 , speed limit = 30 
#Expected output: EUR 80
#Output = EUR 100
#Issue Identified: When we passed in a value of 50km/h for the speed and 30km/h for the speed limit, the expected 
#output should be EUR 80. However, the expected output is false and the condition indicated in the specification is 
#not met.

result4=$(java trafficfine 50 30)
echo $result4
if [ "$result4" = "EUR 80" ]; then
	echo "Passed"
else
	echo "Failed"
fi




#TestCase 5
#Written by: Don Valino
#inputs: speed = 51 , speed limit = 50
#Expected output: EUR 100
#Output = EUR 100

result5=$(java trafficfine 51 50)

echo $result5
if [ "$result5" = "EUR 100" ]; then
	echo "Passed"
else
	echo "Failed"
fi



#TestCase 6
#Written by: Don Valino
#inputs: speed = 61 , speed limit = 50
#Expected output: EUR 100
#Output = EUR 150

#Issue Identified: When we passed in the speed to be 51km/h and the speed limit to be 50km/h,
#the expected output was true with the output EUR 100. This is indicated by TestCase 5. However,
#when we passed in the speed to be 61km/h and the speed limit 50km/h, the expected output became false.
#This indicates a problem in the if condition of the program starting from above 60 km/h.

result6=$(java trafficfine 61 50)

echo $result6
if [ "$result6" = "EUR 100" ]; then
	echo "Passed"
else
	echo "Failed"
fi



#TestCase 7
#Written by: Graham Timmins
#inputs: speed = 121 , speed limit = 50
#Expected output: SUSPEND
#Output = SUSPEND

result7=$(java trafficfine 121 50)
echo $result7
if [ "$result7" = "SUSPEND" ]; then
	echo "Passed"
else
	echo "Failed"
fi


#TestCase 8
#Written by: Graham Timmins
#inputs: speed = 119 , speed limit = 120
#Expected output: EUR 0
#Output = EUR 0

result8=$(java trafficfine 119 120)
echo $result8
if [ "$result8" = "EUR 0" ]; then
	echo "Passed"
else
	echo "Failed"
fi



#TestCase 9
#Written by: Gareth Quirke
#inputs: speed = 201 , speed limit = 120
#Expected output: SUSPEND
#Output = SUSPEND

result9=$(java trafficfine 201 120)
echo $result9
if [ "$result9" = "SUSPEND" ]; then
	echo "Passed"
else
	echo "Failed"
fi


#TestCase 10
#Written by: Gareth Quirke
#inputs: speed = 120 , speed limit = 140
#Expected output: Invalid input
#Output = Blank Space
#Issue Identified: When we passed in a randomly selected number to be the speed (i.e speed = 120km/h) and set the 
#speed limit to be above the condition indicated by the program (i.e speed limit = 140km/h), the expected output was 
#false. The expected output returned just blank spaces.

result10=$(java trafficfine 120 200)
echo $result10
if [ "$result10" = "Invalid input" ]; then
	echo "Passed"
else
	echo "Failed"
fi


